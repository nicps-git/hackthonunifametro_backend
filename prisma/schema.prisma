// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pacientes {
  id              String   @id @default(uuid()) @db.VarChar(36)
  nome            String   @db.VarChar(255)
  sobrenome       String   @db.VarChar(255)
  cpf             String   @unique @db.VarChar(11)
  dataNascimento  String   @db.VarChar(10)
  sexo            String   @db.Char(1)
  telefone        String   @db.VarChar(11)
  email           String   @unique @db.VarChar(255)
  grauParentesco  String?  @db.VarChar(255)
  nomeResponsavel String?  @db.VarChar(255)
  user            String   @unique @db.VarChar(11)
  password        String   @db.VarChar(255)
  idEndereco      String?  @unique @db.VarChar(36)
  idPerfil        String   @unique @db.VarChar(36)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  endereco Enderecos? @relation(fields: [idEndereco], references: [id])
  perfil   Perfis     @relation(fields: [idPerfil], references: [id])

  Agendamento Agendamento[]

  @@map("tbPacientes")
}

model Enderecos {
  id          String   @id @default(cuid()) @db.VarChar(36)
  cep         String   @db.VarChar(8)
  logradouro  String   @db.VarChar(255)
  numero      String   @db.VarChar(10)
  complemento String?  @db.VarChar(255)
  bairro      String   @db.VarChar(255)
  cidade      String   @db.VarChar(255)
  estado      String   @db.Char(2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  pacientes Pacientes?
  medicos   Medicos?

  @@map("tbEnderecos")
}

model Perfis {
  id        String   @id @default(uuid()) @db.VarChar(36)
  nome      String   @db.VarChar(255)
  descricao String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  pacientes Pacientes?
  medicos   Medicos?

  @@map("tbPerfis")
}

model ResetPasswordCodes {
  id        String   @id @default(uuid()) @db.VarChar(36)
  code      String   @db.Char(6)
  email     String   @db.VarChar(255)
  disabled  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("tbResetPasswordCodes")
}

model Medicos {
  id              String   @id @default(uuid()) @db.VarChar(36)
  nome            String   @db.VarChar(255)
  sobrenome       String   @db.VarChar(255)
  cnpj            String   @unique @db.VarChar(14)
  crm             String   @unique @db.VarChar(6)
  dataNascimento  String   @db.VarChar(10)
  sexo            String   @db.Char(1)
  telefone        String   @db.VarChar(11)
  email           String   @unique @db.VarChar(255)
  user            String   @unique @db.VarChar(11)
  password        String   @db.VarChar(255)
  idEndereco      String?  @unique @db.VarChar(36)
  idPerfil        String   @unique @db.VarChar(36)
  idEspecialidade String?  @unique @db.VarChar(36)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt

  endereco      Enderecos?           @relation(fields: [idEndereco], references: [id])
  perfil        Perfis               @relation(fields: [idPerfil], references: [id])
  especialidade MedicoEspecialidade? @relation(fields: [idEspecialidade], references: [id])

  disponibilidade MedicoDisponibilidade[]
  Agendamento     Agendamento[]

  @@map("tbMedicos")
}

model MedicoEspecialidade {
  id        String   @id @default(uuid()) @db.VarChar(36)
  nome      String   @db.VarChar(255)
  descricao String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  medicos Medicos[]

  @@map("tbMedicoEspecialidade")
}

model MedicoDisponibilidade {
  id        String   @id @default(uuid()) @db.VarChar(36)
  idMedico  String   @db.VarChar(36)
  diaSemana String   @db.VarChar(3)
  horario   String   @db.VarChar(8)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  medicos Medicos @relation(fields: [idMedico], references: [id])

  @@map("tbMedicoDisponibilidade")
}

model Agendamento {
  id                  String   @id @default(uuid()) @db.VarChar(36)
  idPaciente          String   @db.VarChar(36)
  idMedico            String   @db.VarChar(36)
  data                DateTime
  horario             String   @db.VarChar(8)
  idStatusAgendamento String   @db.VarChar(36)
  observacao          String?  @db.VarChar(255)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now()) @updatedAt

  paciente          Pacientes          @relation(fields: [idPaciente], references: [id])
  medico            Medicos            @relation(fields: [idMedico], references: [id])
  StatusAgendamento StatusAgendamento? @relation(fields: [idStatusAgendamento], references: [id])

  @@map("tbAgendamento")
}

model StatusAgendamento {
  id        String   @id @default(uuid()) @db.VarChar(36)
  nome      String   @db.VarChar(255)
  descricao String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  Agendamento Agendamento[]

  @@map("tbStatusAgendamento")
}
